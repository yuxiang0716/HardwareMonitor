// <auto-generated />
using System;
using HardwareMonitorApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HardwareMonitorApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251019044452_AddCompanyInfoTable")]
    partial class AddCompanyInfoTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("HardwareMonitorApi.Models.AlertInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AlertDate")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("CpuT")
                        .HasColumnType("double");

                    b.Property<double>("CpuU")
                        .HasColumnType("double");

                    b.Property<string>("DeviceNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<double>("GpuT")
                        .HasColumnType("double");

                    b.Property<double>("GpuU")
                        .HasColumnType("double");

                    b.Property<double>("HddT")
                        .HasColumnType("double");

                    b.Property<double>("HddU")
                        .HasColumnType("double");

                    b.Property<double>("MemoryU")
                        .HasColumnType("double");

                    b.Property<double>("MotherboardT")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("DeviceNo");

                    b.ToTable("AlertInfos");
                });

            modelBuilder.Entity("HardwareMonitorApi.Models.CompanyInfo", b =>
                {
                    b.Property<string>("CompanyCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("RegistrationLimit")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("CompanyCode");

                    b.HasIndex("CompanyName")
                        .IsUnique();

                    b.ToTable("CompanyInfos");
                });

            modelBuilder.Entity("HardwareMonitorApi.Models.DeviceInfo", b =>
                {
                    b.Property<string>("DeviceNo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyInfoCompanyCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ComputerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Initializer")
                        .HasColumnType("longtext");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<string>("OperatingSystem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RegistrationStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SoftwareCount")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .HasColumnType("longtext");

                    b.Property<string>("Version")
                        .HasColumnType("longtext");

                    b.HasKey("DeviceNo");

                    b.HasIndex("CompanyInfoCompanyCode");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("HardwareMonitorApi.Models.DiskInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("AvailableCapacityGB")
                        .HasColumnType("bigint");

                    b.Property<string>("DeviceInfoDeviceNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DeviceNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SlotName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("TotalCapacityGB")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DeviceInfoDeviceNo");

                    b.ToTable("DiskInfos");
                });

            modelBuilder.Entity("HardwareMonitorApi.Models.GraphicsCardInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CardName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DeviceNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DeviceNo");

                    b.ToTable("GraphicsCardInfos");
                });

            modelBuilder.Entity("HardwareMonitorApi.Models.HardwareInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeviceNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("MemoryAvailableGB")
                        .HasColumnType("bigint");

                    b.Property<long>("MemoryTotalGB")
                        .HasColumnType("bigint");

                    b.Property<string>("Motherboard")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Processor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DeviceNo");

                    b.ToTable("HardwareInfos");
                });

            modelBuilder.Entity("HardwareMonitorApi.Models.PowerLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DeviceNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DeviceNo");

                    b.ToTable("PowerLogs");
                });

            modelBuilder.Entity("HardwareMonitorApi.Models.SoftwareInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DeviceNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("InstallationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SoftwareName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DeviceNo");

                    b.ToTable("SoftwareInfos");
                });

            modelBuilder.Entity("HardwareMonitorApi.Models.UserAccount", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("Account")
                        .IsUnique();

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("HardwareMonitorApi.Models.AlertInfo", b =>
                {
                    b.HasOne("HardwareMonitorApi.Models.DeviceInfo", "DeviceInfo")
                        .WithMany("AlertInfos")
                        .HasForeignKey("DeviceNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceInfo");
                });

            modelBuilder.Entity("HardwareMonitorApi.Models.DeviceInfo", b =>
                {
                    b.HasOne("HardwareMonitorApi.Models.CompanyInfo", null)
                        .WithMany("Devices")
                        .HasForeignKey("CompanyInfoCompanyCode");
                });

            modelBuilder.Entity("HardwareMonitorApi.Models.DiskInfo", b =>
                {
                    b.HasOne("HardwareMonitorApi.Models.DeviceInfo", "DeviceInfo")
                        .WithMany("DiskInfos")
                        .HasForeignKey("DeviceInfoDeviceNo");

                    b.Navigation("DeviceInfo");
                });

            modelBuilder.Entity("HardwareMonitorApi.Models.GraphicsCardInfo", b =>
                {
                    b.HasOne("HardwareMonitorApi.Models.DeviceInfo", "DeviceInfo")
                        .WithMany("GraphicsCardInfos")
                        .HasForeignKey("DeviceNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceInfo");
                });

            modelBuilder.Entity("HardwareMonitorApi.Models.HardwareInfo", b =>
                {
                    b.HasOne("HardwareMonitorApi.Models.DeviceInfo", "DeviceInfo")
                        .WithMany("HardwareInfos")
                        .HasForeignKey("DeviceNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceInfo");
                });

            modelBuilder.Entity("HardwareMonitorApi.Models.PowerLog", b =>
                {
                    b.HasOne("HardwareMonitorApi.Models.DeviceInfo", "DeviceInfo")
                        .WithMany("PowerLogs")
                        .HasForeignKey("DeviceNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceInfo");
                });

            modelBuilder.Entity("HardwareMonitorApi.Models.SoftwareInfo", b =>
                {
                    b.HasOne("HardwareMonitorApi.Models.DeviceInfo", "DeviceInfo")
                        .WithMany("SoftwareInfos")
                        .HasForeignKey("DeviceNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceInfo");
                });

            modelBuilder.Entity("HardwareMonitorApi.Models.CompanyInfo", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("HardwareMonitorApi.Models.DeviceInfo", b =>
                {
                    b.Navigation("AlertInfos");

                    b.Navigation("DiskInfos");

                    b.Navigation("GraphicsCardInfos");

                    b.Navigation("HardwareInfos");

                    b.Navigation("PowerLogs");

                    b.Navigation("SoftwareInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
